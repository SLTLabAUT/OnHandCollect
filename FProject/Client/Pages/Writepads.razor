@page "/writepads"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]

<div style="height:100%;overflow:auto;">
    <Stack HorizontalAlign=Alignment.Center VerticalAlign=Alignment.Center Tokens=@(new StackTokens { ChildrenGap = new double[] { 10 } })>
        <StackItem VerticalFill=false Style="width:100%;">
            <Stack Horizontal="true" Wrap="true" Reversed="true" VerticalAlign=Alignment.Center>
                <StackItem>
                    <MyBFUText Variant=@TextType.XxLarge>تخته‌ها <Icon IconName="WhiteBoardApp32" /></MyBFUText>
                </StackItem>
                <StackItem Grow=1 DisableShrink="true">
                    <CommandBar Items=@Items />
                </StackItem>
            </Stack>
        </StackItem>
        <Hr />
        <StackItem Grow=1 Style="width:100%">
            @if (WritepadList is null)
            {
                <Spinner Size=@SpinnerSize.Large />
            }
            else
            {
                <Stack HorizontalAlign=Alignment.Center VerticalAlign=Alignment.Center Tokens=@(new StackTokens { ChildrenGap = new double[] { 10 } })>
                    <StackItem>
                        <MessageBar>
                            پس از تکمیل هر تخته، با استفاده از دکمه‌ی <Icon IconName="Accept" /> آن را جهت بررسی و تایید ارسال‌کنید.
                        </MessageBar>
                    </StackItem>
                    <StackItem VerticalFill=false Align=Alignment.Center>
                        <Paginator Page=Page NextDisabled=!HaveNextPage OnPageChangeHandler=OnPageChangeHandler />
                    </StackItem>
                    <StackItem Grow=1 Style="width:100%;">
                        <Stack Horizontal="true" Wrap="true" HorizontalAlign=Alignment.SpaceEvenly Tokens=@(new StackTokens { ChildrenGap = new double[] { 50 } }) Style="margin:0;">
                            @if (AllCount == 0)
                            {
                                <MyBFUText>شما تخته‌ای ندارید.</MyBFUText>
                            }
                            @for (int i = 0; i < WritepadList.Count; i++)
                            {
                                var writepad = WritepadList[i];

                                <StackItem>
                                    <DocumentCard Style="min-width:320px;">
                                        <Stack Horizontal="true" VerticalAlign=@Alignment.Center Tokens=@(new StackTokens { Padding = "8px 16px" }) Style=@($"font-size:{ThemeProvider.Theme.FontStyle.FontSize.XLarge};")>
                                            <StackItem Grow="1" DisableShrink="true" Tokens=@(new StackItemTokens { Margin = "0 0 0 50px" })>
                                                <MyBFUText Variant=@TextType.XLarge>تخته‌ی شماره‌ی @writepad.SpecifiedNumber</MyBFUText>
                                            </StackItem>
                                            <StackItem>
                                                <MyBFUText Variant=@TextType.XLarge>
                                                    @{
                                                        string pointerTypeTooltip = string.Empty;
                                                        string pointerTypeIconName = string.Empty;
                                                        switch (writepad.PointerType)
                                                        {
                                                            case FProject.Shared.PointerType.Mouse:
                                                                pointerTypeTooltip = "موس";
                                                                pointerTypeIconName = "TouchPointer";
                                                                break;
                                                            case FProject.Shared.PointerType.Touchpad:
                                                                pointerTypeTooltip = "تاچ‌پد";
                                                                pointerTypeIconName = "TouchPointer";
                                                                break;
                                                            case FProject.Shared.PointerType.Pen:
                                                                pointerTypeTooltip = "قلم";
                                                                pointerTypeIconName = "PenWorkspace";
                                                                break;
                                                            case FProject.Shared.PointerType.Touch:
                                                                pointerTypeTooltip = "لمس";
                                                                pointerTypeIconName = "Touch";
                                                                break;
                                                            case FProject.Shared.PointerType.TouchPen:
                                                                pointerTypeTooltip = "قلم لمسی";
                                                                pointerTypeIconName = "EditMirrored";
                                                                break;
                                                        }

                                                        string textTypeTooltip = string.Empty;
                                                        string textTypeIconName = string.Empty;
                                                        switch (writepad.Type)
                                                        {
                                                            case FProject.Shared.WritepadType.Text:
                                                                textTypeTooltip = "متن";
                                                                textTypeIconName = "TextDocument";
                                                                break;
                                                            case FProject.Shared.WritepadType.WordGroup:
                                                                textTypeTooltip = "گروه کلمات";
                                                                textTypeIconName = "TextBox";
                                                                break;
                                                            case FProject.Shared.WritepadType.Sign:
                                                                textTypeTooltip = "امضاء";
                                                                textTypeIconName = "InsertSignatureLine";
                                                                break;
                                                        }
                                                    }
                                                    <TooltipHost>
                                                        <TooltipContent>@pointerTypeTooltip</TooltipContent>
                                                        <ChildContent>
                                                            <Icon IconName=@pointerTypeIconName />
                                                        </ChildContent>
                                                    </TooltipHost>
                                                    <TooltipHost>
                                                        <TooltipContent>@textTypeTooltip</TooltipContent>
                                                        <ChildContent>
                                                            <Icon IconName=@textTypeIconName />
                                                        </ChildContent>
                                                    </TooltipHost>
                                                </MyBFUText>
                                            </StackItem>
                                        </Stack>
                                        <MyBFUText Block="true" Variant=@TextType.SmallPlus Style="padding:0 16px;min-height:4.847em;display:-webkit-box !important;-webkit-line-clamp:3;-webkit-box-orient:vertical;overflow:hidden;">
                                            @GetWritepadTextContent(writepad)
                                        </MyBFUText>
                                        @{
                                            string statusIcon = string.Empty;
                                            switch (writepad.Status)
                                            {
                                                case FProject.Shared.WritepadStatus.Draft:
                                                    statusIcon = "PageEdit";
                                                    break;
                                                case FProject.Shared.WritepadStatus.WaitForAcceptance:
                                                    statusIcon = "DocumentSearch";
                                                    break;
                                                case FProject.Shared.WritepadStatus.Accepted:
                                                    statusIcon = "DocumentApproval";
                                                    break;
                                                case FProject.Shared.WritepadStatus.NeedEdit:
                                                    statusIcon = "PageEdit";
                                                    break;
                                            }
                                            string statusClass = writepad.Status switch
                                            {
                                                FProject.Shared.WritepadStatus.WaitForAcceptance => "status-waiting",
                                                FProject.Shared.WritepadStatus.Accepted => "status-accepted",
                                                FProject.Shared.WritepadStatus.NeedEdit => "status-neededit",
                                                _ => string.Empty,
                                            };
                                        }
                                        <DocumentCardStatus Status=@(writepad.Status.GetAttribute<DisplayAttribute>().Name) StatusIcon=@statusIcon ClassName=@statusClass Style=@($"font-weight:{ThemeProvider.Theme.FontStyle.FontWeight.Bold}") />
                                        <Stack Horizontal="true" VerticalAlign=@Alignment.Center Tokens=@(new StackTokens { Padding = "8px 16px" })>
                                            <StackItem Grow="1" DisableShrink="true">
                                                <TooltipHost>
                                                    <TooltipContent>آخرین بروزرسانی</TooltipContent>
                                                    <ChildContent>
                                                        <MyBFUText Variant=@TextType.Small>آ.ب: @writepad.LastModified.GetLocalTimeString()</MyBFUText>
                                                    </ChildContent>
                                                </TooltipHost>
                                            </StackItem>
                                            <StackItem>
                                                <Stack Horizontal="true" Reversed="true">
                                                    @if (writepad.Status == FProject.Shared.WritepadStatus.Draft || writepad.Status == FProject.Shared.WritepadStatus.NeedEdit)
                                                    {
                                                        <TooltipHost>
                                                            <TooltipContent>ارسال جهت بررسی و تایید</TooltipContent>
                                                            <ChildContent>
                                                                <MyBFUIconButton OnClick=@(args => SubmitForApproval(args, writepad)) IconName="Accept" />
                                                            </ChildContent>
                                                        </TooltipHost>
                                                    }
                                                    else if (writepad.Status == FProject.Shared.WritepadStatus.WaitForAcceptance)
                                                    {
                                                        <TooltipHost>
                                                            <TooltipContent>لغو درخواست بررسی و تایید</TooltipContent>
                                                            <ChildContent>
                                                                <MyBFUIconButton OnClick=@(args => CancelApprovalRequest(args, writepad)) IconName="Cancel" />
                                                            </ChildContent>
                                                        </TooltipHost>
                                                    }
                                                    @{
                                                        string editIcon = "EditSolid12";
                                                        string editTooltip = "ایجاد تغییرات";
                                                        if (writepad.Status == FProject.Shared.WritepadStatus.Accepted)
                                                        {
                                                            editIcon = "View";
                                                            editTooltip = "بازبینی";
                                                        }
                                                    }
                                                    <TooltipHost>
                                                        <TooltipContent>@editTooltip</TooltipContent>
                                                        <ChildContent>
                                                            <MyBFUIconButton OnClick=@(args => EditHandler(args, writepad.SpecifiedNumber)) IconName=@editIcon />
                                                        </ChildContent>
                                                    </TooltipHost>
                                                    <TooltipHost>
                                                        <TooltipContent>حذف</TooltipContent>
                                                        <ChildContent>
                                                            <MyBFUIconButton OnClick=@(args => DeleteButtonHandler(args, writepad)) IconName="Delete" />
                                                        </ChildContent>
                                                    </TooltipHost>
                                                    @{
                                                        string commentsIcon =
                                                            writepad.CommentsStatus == FProject.Shared.WritepadCommentsStatus.NewFromAdmin ? "CommentActive" : "Comment";
                                                    }
                                                    <TooltipHost>
                                                        <TooltipContent>پیام‌ها</TooltipContent>
                                                        <ChildContent>
                                                            <MyBFUIconButton OnClick=@(args => CommentsButtonHandler(args, writepad)) IconName=@commentsIcon />
                                                        </ChildContent>
                                                    </TooltipHost>
                                                    <TooltipHost>
                                                        <TooltipContent>اطلاعات</TooltipContent>
                                                        <ChildContent>
                                                            <MyBFUIconButton OnClick=@(args => InfoButtonHandler(args, writepad)) IconName="Info" />
                                                        </ChildContent>
                                                    </TooltipHost>
                                                </Stack>
                                            </StackItem>
                                        </Stack>
                                    </DocumentCard>
                                </StackItem>
                            }
                        </Stack>
                    </StackItem>
                    <StackItem VerticalFill=false Align=Alignment.Center>
                        <Paginator Page=Page NextDisabled=!HaveNextPage OnPageChangeHandler=OnPageChangeHandler />
                    </StackItem>
                    <StackItem>
                        <MessageBar>
                            پس از تکمیل هر تخته، با استفاده از دکمه‌ی <Icon IconName="Accept" /> آن را جهت بررسی و تایید ارسال‌کنید.
                        </MessageBar>
                    </StackItem>
                </Stack>
            }
        </StackItem>
    </Stack>

    @{
        var DialogId = Guid.NewGuid();
    }
    <Dialog Title="ایجاد تخته‌ی جدید"
            SubText="اطلاعات تخته‌ی جدید خود را در فرم زیر وارد نمایید و گزینه‌ی ذخیره را بزنید."
            IsOpen=@CreateDialogOpen
            DialogType=@DialogType.LargeHeader
            OnDismiss=@(args => CreateDialogOpen=false)
            Style="text-align: right;">
        <ChildContent>
            <EditForm EditContext=EditContext AdditionalAttributes=@(new Dictionary<string, object>() { { "id", DialogId } }) OnSubmit=SubmitWritepad>
                <DataAnnotationsValidator />
                <FluentUIValidationSummary />
                <MyBFUDropdown ItemsSource=PointerTypes
                               Placeholder="یک گزینه را برگزینید..."
                               @bind-SelectedOption=NewWritepad.PointerType
                               Label=@(Utils.GetDisplayName<NewWritepadModel, IDropdownOption>(b => b.PointerType))
                               Required="true" />
                <MyBFUDropdown ItemsSource=TextTypes
                               Placeholder="یک گزینه را برگزینید..."
                               @bind-SelectedOption=NewWritepad.WritepadType
                               Label=@(Utils.GetDisplayName<NewWritepadModel, IDropdownOption>(b => b.WritepadType))
                               Required="true"
                               OnChange="TextTypeChangeHandler" />
                @if (Handedness == Handedness.Both)
                {
                    <MyBFUDropdown ItemsSource=HandOptions
                                   Placeholder="یک گزینه را برگزینید..."
                                   @bind-SelectedOption=NewWritepad.Hand
                                   Label=@(Utils.GetDisplayName<NewWritepadModel, IDropdownOption>(b => b.Hand))
                                   Required="true" />
                }
                <Slider Label=@(Utils.GetDisplayName<NewWritepadModel, double>(m => m.Number)) @bind-Value=@NewWritepad.Number Min=1 Max=@(IsSignSelected ? 7 : 25) />
                @if (IsSignSelected)
                {
                    <MessageBar>
                        ایجاد تخته‌ی امضاء با نوع ورودی و دست یکسان تنها ۷ عدد در هر ۱۲ ساعت مجاز است.
                    </MessageBar>
                }
            </EditForm>
        </ChildContent>
        <FooterTemplate>
            <DefaultButton Text="لغو" OnClick=@(args => CreateDialogOpen=false) />
            <SubmitButton Text="ذخیره" Disabled=SubmitDisabled UnknownProperties=@(new Dictionary<string, object>() { { "form", DialogId } }) />
        </FooterTemplate>
    </Dialog>

    <MyBFUDialog Title="تایید حذف تخته"
                 SubText=@($"آیا از حذف تخته‌ی شماره‌ی {CurrentWritepad?.SpecifiedNumber} اطمینان دارید؟")
                 IsOpen=@DeleteDialogOpen
                 OnDismiss=@(args => DeleteDialogOpen=false)
                 CloseButtonAriaLabel="بستن"
                 Style="text-align: right;">
        <ChildContent></ChildContent>
        <FooterTemplate>
            <DefaultButton Text="لغو" OnClick=@(args => DeleteDialogOpen=false) />
            <PrimaryButton Text="حذف" OnClick=DeleteWritepad />
        </FooterTemplate>
    </MyBFUDialog>

    <MyBFUDialog Title=@($"پیام‌های تخته‌ی {CurrentWritepad?.SpecifiedNumber}")
                 IsOpen=@CommentsDialogOpen
                 OnDismiss=@(args => CommentsDialogOpen=false)
                 CloseButtonAriaLabel="بستن"
                 Style="text-align: right;">
        <ChildContent>
            <Stack HorizontalAlign=Alignment.Center VerticalAlign=Alignment.Center Tokens=@(new StackTokens { ChildrenGap = new double[] { 10 } })>
                @if (CurrentWritepad?.Comments.Count > 0)
                {
                    <StackItem Align=Alignment.Center Style="width:100%">
                        <CommentSection Comments="CurrentWritepad?.Comments" />
                    </StackItem>
                    <Hr />
                }
                <StackItem Align=Alignment.Center Style="width:100%">
                    <EditForm EditContext=CommentEditContext OnValidSubmit=SendCommentHandler>
                        <DataAnnotationsValidator />
                        <FluentUIValidationSummary />

                        <MyBFUTextField Multiline=true Label="متن پیام جدید" DisplayName="متن پیام جدید" @bind-Value=@CommentDTO.Text @bind-Value:event="OnChange" />
                        <SubmitButton Text="ارسال پیام" />
                    </EditForm>
                </StackItem>
            </Stack>
        </ChildContent>
        <FooterTemplate></FooterTemplate>
    </MyBFUDialog>

    <MyBFUDialog Title=@($"اطلاعات تخته‌ی {CurrentWritepad?.SpecifiedNumber}")
                 IsOpen=@InfoDialogOpen
                 OnDismiss=@(args => InfoDialogOpen=false)
                 CloseButtonAriaLabel="بستن"
                 Style="text-align: right;">
        <ChildContent>
            <MyBFUText Block=true>
                شماره: @CurrentWritepad?.SpecifiedNumber
                <br />
                وضعیت: @(CurrentWritepad?.Status.GetAttribute<DisplayAttribute>().Name)
                <br />
                نوع ورودی: @(CurrentWritepad?.PointerType.GetAttribute<DisplayAttribute>().Name)
                <br />
                نوع: @(CurrentWritepad?.Type.GetAttribute<DisplayAttribute>().Name)
                <br />
                نوع دست: @(CurrentWritepad?.Hand.GetAttribute<DisplayAttribute>().Name)
                <br />
                آخرین بروزرسانی: @CurrentWritepad?.LastModified.GetLocalTimeString()
                <br />
                @if (CurrentWritepad?.Type != FProject.Shared.WritepadType.Sign)
                {
                    @:متن: @GetWritepadTextContent(CurrentWritepad)
                }
            </MyBFUText>
        </ChildContent>
        <FooterTemplate></FooterTemplate>
    </MyBFUDialog>
</div>
